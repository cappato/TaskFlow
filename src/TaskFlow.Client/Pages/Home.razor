@page "/"
@layout ModernLayout

<PageTitle>Inicio - TaskFlow</PageTitle>

<!-- Hero Section -->
<div class="bg-gradient-to-r from-blue-600 to-purple-600 rounded-xl p-8 mb-8 text-white">
    <div class="max-w-3xl">
        <h1 class="text-4xl font-bold mb-4">Bienvenido a TaskFlow</h1>
        <p class="text-xl text-blue-100 mb-6">Gestiona tus tareas y proyectos de manera eficiente con nuestra plataforma moderna</p>
        <div class="flex space-x-4">
            <Button Variant="ButtonVariant.Secondary" OnClick="@(() => NavigateToTasks())">
                <Icon>
                    <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6"></path>
                    </svg>
                </Icon>
                <ChildContent>Nueva Tarea</ChildContent>
            </Button>
            <Button Variant="ButtonVariant.Ghost" AdditionalClasses="text-white border-white hover:bg-white hover:text-blue-600">
                <ChildContent>Ver Proyectos</ChildContent>
            </Button>
        </div>
    </div>
</div>

@if (isLoading)
{
    <div class="flex justify-center items-center py-12">
        <div class="animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600"></div>
        <span class="ml-3 text-gray-600">Cargando datos...</span>
    </div>
}
else
{
    <!-- Dashboard Statistics -->
    <ModernDashboardStats Tasks="recentTasks" />

    <div class="grid grid-cols-1 lg:grid-cols-2 gap-8 mt-8">
        <!-- Recent Tasks -->
        <Card Title="Tareas Recientes" Hover="true">
            <ChildContent>
                @if (recentTasks != null && recentTasks.Any())
                {
                    <div class="space-y-4">
                        @foreach (var task in recentTasks.Take(4))
                        {
                            <ModernTaskCard Task="task" ShowActions="false" />
                        }
                    </div>
                }
                else
                {
                    <div class="text-center py-8">
                        <svg class="mx-auto h-12 w-12 text-gray-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5H7a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"></path>
                        </svg>
                        <h3 class="mt-2 text-sm font-medium text-gray-900">No hay tareas</h3>
                        <p class="mt-1 text-sm text-gray-500">Comienza creando tu primera tarea.</p>
                        <div class="mt-6">
                            <Button OnClick="@(() => NavigateToTasks())">
                                <Icon>
                                    <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6"></path>
                                    </svg>
                                </Icon>
                                <ChildContent>Crear Primera Tarea</ChildContent>
                            </Button>
                        </div>
                    </div>
                }
            </ChildContent>
            <Actions>
                @if (recentTasks != null && recentTasks.Any())
                {
                    <Button OnClick="@(() => NavigateToTasks())">
                        <ChildContent>Ver Todas las Tareas</ChildContent>
                    </Button>
                }
            </Actions>
        </Card>

        <!-- Active Projects -->
        <Card Title="Proyectos Activos" Hover="true">
            <ChildContent>
                @if (activeProjects != null && activeProjects.Any())
                {
                    <div class="space-y-4">
                        @foreach (var project in activeProjects.Take(5))
                        {
                            <div class="border border-gray-200 rounded-lg p-4 hover:bg-gray-50 transition-colors">
                                <div class="flex justify-between items-start mb-2">
                                    <h4 class="font-medium text-gray-900">@project.Name</h4>
                                    <span class="text-sm text-gray-500">@project.TaskCount tareas</span>
                                </div>
                                <p class="text-sm text-gray-600 mb-3">@project.Description</p>
                                <div class="w-full bg-gray-200 rounded-full h-2">
                                    <div class="bg-blue-600 h-2 rounded-full transition-all duration-300"
                                         style="width: @(project.TaskCount > 0 ? (project.CompletedTaskCount * 100 / project.TaskCount) : 0)%"></div>
                                </div>
                                <div class="mt-2 text-xs text-gray-500">
                                    @project.CompletedTaskCount de @project.TaskCount completadas
                                </div>
                            </div>
                        }
                    </div>
                }
                else
                {
                    <div class="text-center py-8">
                        <svg class="mx-auto h-12 w-12 text-gray-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10"></path>
                        </svg>
                        <h3 class="mt-2 text-sm font-medium text-gray-900">No hay proyectos</h3>
                        <p class="mt-1 text-sm text-gray-500">Organiza tus tareas creando proyectos.</p>
                        <div class="mt-6">
                            <Button OnClick="@(() => NavigateToProjects())">
                                <Icon>
                                    <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6"></path>
                                    </svg>
                                </Icon>
                                <ChildContent>Crear Primer Proyecto</ChildContent>
                            </Button>
                        </div>
                    </div>
                }
            </ChildContent>
            <Actions>
                @if (activeProjects != null && activeProjects.Any())
                {
                    <Button OnClick="@(() => NavigateToProjects())">
                        <ChildContent>Ver Todos los Proyectos</ChildContent>
                    </Button>
                }
            </Actions>
        </Card>
    </div>
}

@using TaskFlow.Client.Components.UI
@using TaskFlow.Client.Components.Layout

@code {
    private IEnumerable<TaskDto>? recentTasks;
    private IEnumerable<ProjectDto>? activeProjects;
    private bool isLoading = true;

    [Inject] public ITaskApiService TaskService { get; set; } = default!;
    [Inject] public IProjectApiService ProjectService { get; set; } = default!;
    [Inject] public NavigationManager Navigation { get; set; } = default!;

    protected override async Task OnInitializedAsync()
    {
        await LoadDashboardData();
    }

    private async Task LoadDashboardData()
    {
        isLoading = true;
        try
        {
            recentTasks = await TaskService.GetAllTasksAsync();
            activeProjects = await ProjectService.GetActiveProjectsAsync();
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error loading dashboard data: {ex.Message}");
        }
        finally
        {
            isLoading = false;
        }
    }

    private void NavigateToTasks()
    {
        Navigation.NavigateTo("/tasks");
    }

    private void NavigateToProjects()
    {
        Navigation.NavigateTo("/projects");
    }
}
